# -*- coding: utf-8 -*-
"""Speech recognition .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XOj0x1bffrl3xFaTgjHrSRdFk40eNyII

Here are the APIs and their websites:

Google Cloud Speech-to-Text API: https://cloud.google.com/speech-to-text/ \
Microsoft Azure Speech Services: https://azure.microsoft.com/en-us/services/cognitive-services/speech-services/ \
Amazon Transcribe: https://aws.amazon.com/transcribe/ \
IBM Watson Speech to Text: https://www.ibm.com/cloud/watson-speech-to-text \
You can visit these websites to learn more about the APIs and how to use them in your Speech Recognition App.
"""

#pip install SpeechRecognition

#pip install streamlit

import streamlit as st
import speech_recognition as sr

def transcribe_speech(api):
    # Initialize recognizer class
    r = sr.Recognizer()

    # Set the API to use
    if api == 'Google':
        recognizer = sr.Recognizer()
    elif api == 'Microsoft':
        recognizer = sr.Recognizer()
        recognizer.energy_threshold = 4000
        recognizer.dynamic_energy_threshold = True
        recognizer.dynamic_energy_adjustment_ratio = 1.5
    elif api == 'Amazon':
        recognizer = sr.Recognizer()
    elif api == 'IBM':
        recognizer = sr.Recognizer()
        recognizer.model = 'en-US_BroadbandModel'
        recognizer.keywords = ['colorado', 'tornado', 'tornadoes', 'hail', 'storm']
        recognizer.speaker_labels = True

    # Reading Microphone as source
    with sr.Microphone() as source:
        st.info("Speak now...")
        # listen for speech and store in audio_text variable
        audio_text = r.listen(source)
        st.info("Transcribing...")

        try:
            # using selected Speech Recognition API
            if api == 'Google':
                text = recognizer.recognize_google(audio_text)
            elif api == 'Microsoft':
                text = recognizer.recognize_azure(audio_text)
            elif api == 'Amazon':
                text = recognizer.recognize_amazon(audio_text)
            elif api == 'IBM':
                text = recognizer.recognize_ibm(audio_text)
            return text
        except sr.UnknownValueError:
            return "Sorry, I did not understand what you said."
        except sr.RequestError as e:
            return f"Sorry, could not request results from Speech Recognition API: {e}"

def main():
    st.title("Speech Recognition App")
    st.write("Select the Speech Recognition API to use:")
    api = st.selectbox('', ['Google', 'Microsoft', 'Amazon', 'IBM'])

    st.write("Click on the microphone to start speaking:")

    # add a button to trigger speech recognition
    if st.button("Start Recording"):
        text = transcribe_speech(api)
        st.write("Transcription: ", text)

if __name__ == "__main__":
    main()

"""Add a feature to allow the user to save the transcribed text to a file.
We can add a new button to the app that allows the user to save the transcribed text to a file. Here's the modified code:
"""

def transcribe_speech(language, api):
    # Initialize recognizer class
    r = sr.Recognizer()
    # Reading Microphone as source
    with sr.Microphone() as source:
        st.info("Speak now...")
        # listen for speech and store in audio_text variable
        audio_text = r.listen(source)

        try:
            # using the selected API for speech recognition
            if api == "Google":
                text = r.recognize_google(audio_text, language=language)
            elif api == "Microsoft":
                text = r.recognize_azure(audio_text, language=language)
            elif api == "Amazon":
                text = r.recognize_aws(audio_text, language=language)
            elif api == "IBM":
                text = r.recognize_ibm(audio_text, language=language)
            else:
                return "Please select a valid API."

            return text
        except sr.UnknownValueError:
            return "Oops! Unable to recognize speech."
        except sr.RequestError as e:
            return f"Error: {e}"

def main():
    st.title("Speech Recognition App")
    st.write("Click on the microphone to start speaking:")

    # add a selectbox to choose API and a text input to choose language
    api = st.selectbox("Select API", ["Google", "Microsoft", "Amazon", "IBM"])
    language = st.text_input("Language", "en-US")

    # add a button to trigger speech recognition
    if st.button("Start Recording"):
        text = transcribe_speech(language, api)
        st.write("Transcription: ", text)

        # add a button to save the transcription to a file
        if st.button("Save to File"):
            with open("transcription.txt", "w") as file:
                file.write(text)

if __name__ == "__main__":
    main()

